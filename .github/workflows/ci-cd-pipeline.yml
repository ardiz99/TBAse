name: CI/CD Pipeline for Microservices

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test-services:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Newman
        run: npm install -g newman

      - name: Build and Test Auth Service
        run: |
          docker build -t auth_image -f ./src/auth_service/Dockerfile_test .
          docker run --name auth_cont -d -p 5001:5001 auth_image
          newman run tests/auth_service.postman_collection.json --env-var baseUrl=http://localhost:5001
          docker stop auth_cont && docker rm auth_cont

      - name: Build and Test Gacha Service
        run: |
          docker build -t gacha_image -f ./src/gacha_service/Dockerfile_test .
          docker run --name gacha_cont -d -p 5002:5002 gacha_image
          newman run tests/gacha_service.postman_collection.json --env-var baseUrl=http://localhost:5002
          docker stop gacha_cont && docker rm gacha_cont

      - name: Build and Test Currency Service
        run: |
          docker build -t currency_image -f ./src/currency_service/Dockerfile_test .
          docker run --name currency_cont -d -p 5004:5004 currency_image
          newman run tests/currency_service.postman_collection.json --env-var baseUrl=http://localhost:5004
          docker stop currency_cont && docker rm currency_cont

      - name: Build and Test Market Service
        run: |
          docker build -t market_image -f ./src/market_service/Dockerfile_test .
          docker run --name market_cont -d -p 5003:5003 market_image
          newman run tests/market_service.postman_collection.json --env-var baseUrl=http://localhost:5003
          docker stop market_cont && docker rm market_cont

  integration-tests:
    runs-on: ubuntu-latest
    needs: build-and-test-services
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Install Newman
        run: npm install -g newman

      - name: Start Docker Compose Services
        run: docker-compose -f docker-compose.yaml up --build -d

      - name: Refresh DB
        run: docker exec -i db mysql -u root -p root_password < ./db/ase.sql

      - name: Run Integration Tests with Newman
        run: newman run tests/integration.postman_collection.json --env-var baseUrl=http://localhost

      - name: Tear down Docker Compose Services
        if: always()
        run: docker-compose -f docker-compose.yaml down

  performance-tests:
    runs-on: ubuntu-latest
    needs: build-and-test-services
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Install Locust
        run: |
          python3 -m pip install --upgrade pip
          pip install locust

      - name: Start Docker Compose Services
        run: docker-compose -f docker-compose.yaml up --build -d

      - name: Run Locust Performance Tests
        run: locust -f tests/locustfile.py --headless -u 100 -r 10 --run-time 10m --host=http://localhost

      - name: Tear down Docker Compose Services
        if: always()
        run: docker-compose -f docker-compose.yaml down
