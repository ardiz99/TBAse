openapi: 3.0.3
info:
  title: Authentication Service API
  version: "1.0.0"
  description: |
    This service provides endpoints for user and admin account management, 
    including login, logout, registration, account updates, and deletion.

servers:
  - url: https://localhost:8001
    description: Local environment

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    MessageResponse:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
        data:
          type: object
          additionalProperties: true

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        details:
          type: string

    LoginRequest:
      type: object
      properties:
        Email:
          type: string
          format: email
        Password:
          type: string
      required:
        - Email
        - Password

    RegisterRequest:
      type: object
      properties:
        FirstName:
          type: string
        LastName:
          type: string
        Email:
          type: string
          format: email
        Password:
          type: string
        CurrencyAmount:
          type: integer
      required:
        - FirstName
        - LastName
        - Email
        - Password
        - CurrencyAmount

    RegisterAdminRequest:
      type: object
      properties:
        FirstName:
          type: string
        LastName:
          type: string
        Email:
          type: string
          format: email
        Password:
          type: string
      required:
        - FirstName
        - LastName
        - Email
        - Password

    UpdateUserRequest:
      type: object
      properties:
        FirstName:
          type: string
        LastName:
          type: string
        Email:
          type: string
          format: email
        Password:
          type: string
        CurrencyAmount:
          type: integer

    UpdateAdminRequest:
      type: object
      properties:
        FirstName:
          type: string
        LastName:
          type: string
        Email:
          type: string
          format: email
        Password:
          type: string

    UpdateSpecificUserRequest:
      type: object
      properties:
        search_email:
          type: string
          format: email
        FirstName:
          type: string
        LastName:
          type: string
        Email:
          type: string
          format: email
        Password:
          type: string
        CurrencyAmount:
          type: integer

paths:
  /login:
    post:
      summary: User login
      description: Logs in a user with the provided email and password, returning JWT tokens.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '400':
          description: Bad request (missing or invalid fields)
        '500':
          description: Internal server error
      tags:
        - Auth

  /login_admin:
    post:
      summary: Admin login
      description: Logs in an admin with the provided email and password, returning JWT tokens.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '400':
          description: Bad request (missing or invalid fields)
        '500':
          description: Internal server error
      tags:
        - Auth

  /logout:
    get:
      summary: Logout
      description: Logs out the currently authenticated user or admin by invalidating the token.
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '401':
          description: Unauthorized (no valid token provided)
        '500':
          description: Internal server error
      tags:
        - Auth

  /register:
    post:
      summary: User registration
      description: Registers a new user with the provided details.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '200':
          description: Registration successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '400':
          description: Bad request (missing or invalid fields)
        '500':
          description: Internal server error
      tags:
        - Auth

  /register_admin:
    post:
      summary: Admin registration
      description: Registers a new admin with the provided details.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterAdminRequest'
      responses:
        '200':
          description: Registration successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '400':
          description: Bad request (missing or invalid fields)
        '500':
          description: Internal server error
      tags:
        - Auth

  /update_user:
    put:
      summary: Update user data
      description: Updates the authenticated user's data. Requires a valid user token.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      responses:
        '200':
          description: Update completed successfully
        '400':
          description: Bad request
        '401':
          description: Unauthorized (no valid token)
        '500':
          description: Internal server error
      tags:
        - User Management

  /update_specific_user:
    put:
      summary: Update a specific user (admin only)
      description: Updates another user's data, identified by `search_email`. Requires a valid admin token.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSpecificUserRequest'
      responses:
        '200':
          description: Update completed successfully
        '400':
          description: Bad request
        '401':
          description: Unauthorized (no valid admin token)
        '500':
          description: Internal server error
      tags:
        - Admin Management

  /update_admin:
    put:
      summary: Update admin data
      description: Updates the authenticated admin's data. Requires a valid admin token.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAdminRequest'
      responses:
        '200':
          description: Update completed successfully
        '400':
          description: Bad request
        '401':
          description: Unauthorized (no valid admin token)
        '500':
          description: Internal server error
      tags:
        - Admin Management

  /check_users_profile:
    get:
      summary: Check all users' profiles
      description: Retrieves profiles of all users. According to the provided code, no token is required for this endpoint.
      responses:
        '200':
          description: Profiles retrieved successfully
        '400':
          description: Bad request
        '500':
          description: Internal server error
      tags:
        - User Management

  /delete_user:
    delete:
      summary: Delete user
      description: Deletes the authenticated user's account. Requires a valid user token.
      security:
        - BearerAuth: []
      responses:
        '200':
          description: User deleted successfully
        '400':
          description: Bad request
        '401':
          description: Unauthorized (no valid token)
        '500':
          description: Internal server error
      tags:
        - User Management

  /delete_admin:
    delete:
      summary: Delete admin
      description: Deletes the authenticated admin's account. Requires a valid admin token.
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Admin deleted successfully
        '400':
          description: Bad request
        '401':
          description: Unauthorized (no valid admin token)
        '500':
          description: Internal server error
      tags:
        - Admin Management

  /protected:
    get:
      summary: Protected endpoint
      description: A protected endpoint to verify token-based access. Requires a valid token.
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Access granted
        '400':
          description: Bad request or invalid token
        '401':
          description: Unauthorized
      tags:
        - Test
