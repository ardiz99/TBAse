openapi: 3.0.3
info:
  title: API Gateway Service
  description: |-
    This API Gateway acts as the main entry point for client requests, forwarding them
    to the appropriate microservices for processing. It integrates with multiple services,
    including `auth-service`, `currency-service`, and `gacha-service`.
    
    
    Some useful links:
    - [The Pokémon Gacha repository](https://github.com/ardiz99/TBAse)
    - [The source APIs definition for the Pokémon Gacha](https://github.com/ardiz99/TBAse/doc)
  version: 1.0.0
  x-microservice: api-gateway
servers:
  - url: http://api-gateway:8000
    description: API Gateway in Docker environment
  - url: http://127.0.0.1:8000
    description: API Gateway on local development
tags:
  - name: API Gateway
    description: API operations for routing requests to other services
paths:
  /:
    get:
      tags:
        - API Gateway
      summary: Check API Gateway status.
      description: Simple endpoint to verify that the API Gateway is running.
      responses:
        '200':
          description: Gateway is running.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: API Gateway is running

  /roll:
    get:
      tags:
        - Currency Service
      summary: Perform a gacha roll.
      description: Fetches gacha roll data and image by interacting with the currency service.
      responses:
        '200':
          description: Gacha roll executed successfully.
          content:
            image/png:
              schema:
                type: string
                format: binary
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string

  /buy_currency:
    put:
      tags:
        - Currency Service
      summary: Purchase in-game currency.
      description: Allows a user to purchase additional currency by forwarding the request to the currency service.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
                  description: Quantity of currency to purchase.
      responses:
        '200':
          description: Currency purchased successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  data:
                    type: array
                  message:
                    type: string
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string

  /gacha:
    get:
      tags:
        - Gacha Service
      summary: Retrieve all gacha items.
      description: Fetches a list of all gacha items from the gacha service.
      responses:
        '200':
          description: All gacha items retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  data:
                    type: array
                    items:
                      type: object
                  message:
                    type: string
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string

  /gacha/add:
    post:
      tags:
        - Gacha Service
      summary: Add a new gacha item.
      description: Forwards a request to the gacha service to create a new gacha item.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: Gacha item added successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string

  /login:
    get:
      tags:
        - Auth Service
      summary: User login.
      description: Authenticates a user with the `auth-service`.
      parameters:
        - name: Email
          in: query
          required: true
          schema:
            type: string
          description: User email.
        - name: Password
          in: query
          required: true
          schema:
            type: string
          description: User password.
      responses:
        '200':
          description: User logged in successfully.
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object

  # Similar patterns for other endpoints like `/register`, `/delete_user`, `/gacha/{id}`, etc.
